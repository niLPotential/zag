---
import { checkboxControls, getControlDefaults } from "@zag-js/shared"
import Toolbar from "../components/Toolbar.astro"
import Controls from "../components/Controls.astro"
import Layout from "../layouts/Layout.astro"
import StateVisualizer from "../components/StateVisualizer.astro"
import Nav from "../components/Nav.astro"

const state = getControlDefaults(checkboxControls)
---

<script>
  import "@zag-js/shared/src/style.css"
  import * as checkbox from "@zag-js/checkbox"
  import serialize from "form-serialize"
  import Alpine from "alpinejs"
  import { usePlugin } from "../lib"

  Alpine.magic("serialize", () => {
    return (form: any, options: any) => serialize(form, options)
  })
  Alpine.plugin(usePlugin("checkbox", checkbox))
</script>

<Layout>
  <div
    class="page"
    x-data={JSON.stringify(state)}
    x-id="['checkbox']"
    x-checkbox={`{id: $id('checkbox'), name: 'checkbox', ${Object.keys(state)}}`}
  >
    <Nav />
    <main class="checkbox">
      <form
        x-on:change="(e) => {
          const result = $serialize(e.currentTarget, { hash: true });
          console.log(result);
        }"
      >
        <fieldset>
          <label x-checkbox:root>
            <div x-checkbox:control></div>
            <span x-checkbox:label x-text="'Input ' + ($checkbox.checked ? 'Checked' : 'Unchecked')"></span>
            <input x-checkbox:hidden-input data-testid="hidden-input" />
            <div x-checkbox:indicator>Indicator</div>
          </label>

          <button type="button" x-bind:disabled="$checkbox.checked" x-on:click="$checkbox.setChecked(true)">
            Check
          </button>
          <button type="button" x-bind:disabled="! $checkbox.checked" x-on:click="$checkbox.setChecked(false)">
            Uncheck
          </button>
          <button type="reset">Reset Form</button>
        </fieldset>
      </form>
    </main>

    <Toolbar>
      <Controls config={checkboxControls} {state} slot="controls" />
      <StateVisualizer />
    </Toolbar>
  </div>
</Layout>
