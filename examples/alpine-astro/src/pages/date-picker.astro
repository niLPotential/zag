---
import { datePickerControls, getControlDefaults } from "@zag-js/shared"
import Controls from "../components/Controls.astro"
import Toolbar from "../components/Toolbar.astro"

const state = getControlDefaults(datePickerControls)
---

<script>
  import "@zag-js/shared/src/style.css"
  import * as datePicker from "@zag-js/date-picker"
  import Alpine from "alpinejs"
  import { usePlugin } from "../lib"

  Alpine.plugin(usePlugin("date-picker", datePicker))
</script>

<div
  x-data={JSON.stringify(state)}
  x-id="['date-picker']"
  x-date-picker={`{
    id: $id('date-picker'),
    locale: 'en',
    selectionMode: 'single',
    ${Object.keys(state)}
  }`}
>
  <main class="date-picker">
    <div>
      <button>Outside Element</button>
    </div>
    <p x-text="'Visible range: ' + $datePicker.visibleRangeText.formatted"></p>

    <output class="date-output">
      <div x-text="'Selected: ' + ($datePicker.valueAsString ?? '-')"></div>
      <div x-text="'Focused: ' + $datePicker.focusedValueAsString"></div>
    </output>

    <div x-date-picker:control>
      <input x-date-picker:input />
      <button x-date-picker:clear-trigger>‚ùå</button>
      <button x-date-picker:trigger>üóì</button>
    </div>

    <div x-date-picker:positioner>
      <div x-date-picker:content>
        <div style="margin-bottom: 20px;">
          <select x-date-picker:month-select>
            <template x-for="(month, i) in $datePicker.getMonths()" x-bind:key="i">
              <option x-bind:value="month.value" x-bind:disabled="month.disabled" x-text="month.label"></option>
            </template>
          </select>

          <select x-date-picker:year-select>
            <template x-for="(year, i) in $datePicker.getYears()" x-bind:key="i">
              <option x-bind:value="year.value" x-bind:disabled="year.disabled" x-text="year.label"></option>
            </template>
          </select>
        </div>

        <div x-bind:hidden="$datePicker.view !== 'day'">
          <div x-date-picker:view-control="{view: 'year'}">
            <button x-date-picker:prev-trigger>Prev</button>
            <button x-date-picker:view-trigger x-text="$datePicker.visibleRangeText.start"></button>
            <button x-date-picker:next-trigger>Next</button>
          </div>

          <table x-date-picker:table="{view: 'day'}">
            <thead x-date-picker:table-header="{view: 'day'}">
              <tr x-date-picker:table-row="{view: 'day'}">
                <template x-for="(day, i) in $datePicker.weekDays" x-bind:key="i">
                  <th scope="col" x-bind:aria-label="day.long" x-text="day.narrow"></th>
                </template>
              </tr>
            </thead>
            <tbody x-date-picker:table-body="{view: 'day'}">
              <template x-for="(week, i) in $datePicker.weeks" x-bind:key="i">
                <tr x-date-picker:table-row="{view: 'day'}">
                  <template x-for="(value, i) in week" x-bind:key="i">
                    <td x-date-picker:day-table-cell="{value}">
                      <div x-date-picker:day-table-cell-trigger="{value}" x-text="value.day"></div>
                    </td>
                  </template>
                </tr>
              </template>
            </tbody>
          </table>
        </div>

        <div style="display: flex; gap: 40px;">
          <div x-bind:hidden="$datePicker.view !== 'month'" style="width: 100%;">
            <div x-date-picker:view-control="{view: 'month'}">
              <button x-date-picker:prev-trigger="{view: 'month'}">Prev</button>
              <button x-date-picker:view-trigger="{view: 'month'}" x-text="$datePicker.visibleRange.start.year"
              ></button>
              <button x-date-picker:next-trigger="{view: 'month'}">Next</button>
            </div>

            <table x-date-picker:table="{view: 'month', columns: 4}">
              <tbody x-date-picker:table-body="{view: 'month'}">
                <template
                  x-for="(months, row) in $datePicker.getMonthsGrid({columns: 4, format: 'short'})"
                  x-bind:key="row"
                >
                  <tr x-date-picker:table-row>
                    <template x-for="(month, index) in months" x-bind:key="index">
                      <td x-date-picker:month-table-cell="{...month, columns: 4}">
                        <div x-date-picker:month-table-cell-trigger="{...month, columns: 4}" x-text="month.label"></div>
                      </td>
                    </template>
                  </tr>
                </template>
              </tbody>
            </table>
          </div>

          <div x-bind:hidden="$datePicker.view !== 'year'" style="width: 100%;">
            <div x-date-picker:view-control="{view: 'year'}">
              <button x-date-picker:prev-trigger="{view: 'year'}">Prev</button>
              <span x-text="$datePicker.getDecade().start + ' - ' + $datePicker.getDecade().end"></span>
              <button x-date-picker:next-trigger="{view: 'year'}">Next</button>
            </div>

            <table x-date-picker:table="{view: 'year', columns: 4}">
              <tbody x-date-picker:table-body>
                <template x-for="(years, row) in $datePicker.getYearsGrid({columns: 4})" x-bind:key="row">
                  <tr x-date-picker:table-row="{view: 'year'}">
                    <template x-for="(year, index) in years" x-bind:key="index">
                      <td x-date-picker:year-table-cell="{...year, columns: 4}">
                        <div x-date-picker:year-table-cell-trigger="{...year, columns: 4}" x-text="year.label"></div>
                      </td>
                    </template>
                  </tr>
                </template>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </main>

  <Toolbar viz>
    <Controls {state} config={datePickerControls} slot="controls" />
  </Toolbar>
</div>
