---
import { getControlDefaults, pinInputControls } from "@zag-js/shared"
import Controls from "../components/Controls.astro"
import StateVisualizer from "../components/StateVisualizer.astro"
import Toolbar from "../components/Toolbar.astro"
import Layout from "../layouts/Layout.astro"

const state = getControlDefaults(pinInputControls)
---

<script>
  import Alpine from "alpinejs"
  import * as pinInput from "@zag-js/pin-input"
  import { createZagPlugin } from "../lib"

  Alpine.plugin(createZagPlugin("pin-input", pinInput))
</script>

<Layout>
  <main
    class="pin-input"
    x-data={JSON.stringify(state)}
    x-id="['pin-input']"
    x-pin-input={`{name: 'test', id: $id('pin-input'), count: 3, ${Object.keys(state)}}`}
  >
    <form x-on:submit="(e) => e.preventDefault()">
      <div x-pin-input:root>
        <label x-pin-input:label>Enter code:</label>
        <div x-pin-input:control>
          <template x-for="index in $pinInput.items" x-bind:key="index">
            <input x-bind:data-testid="'input-' + (index+1)" x-pin-input:input="{index}" />
          </template>
        </div>
        <input x-pin-input:hidden-input />
      </div>
      <button data-testid="clear-button" x-on:click="$pinInput.clearValue">Clear</button>
      <button x-on:click="$pinInput.focus">Focus</button>
    </form>

    <Toolbar>
      <Controls {state} config={pinInputControls} />
      <StateVisualizer context={["value", "focusedIndex"] as any} />
    </Toolbar>
  </main>
</Layout>
