---
import { comboboxControls, getControlDefaults } from "@zag-js/shared"
import XIcon from "@lucide/astro/icons/x"
import Layout from "../layouts/Layout.astro"
import Nav from "../components/Nav.astro"
import Toolbar from "../components/Toolbar.astro"
import Controls from "../components/Controls.astro"
import StateVisualizer from "../components/StateVisualizer.astro"

const state = getControlDefaults(comboboxControls)
---

<script>
  import * as combobox from "@zag-js/combobox"
  import { comboboxData } from "@zag-js/shared"
  import Alpine from "alpinejs"
  import { matchSorter } from "match-sorter"
  import { usePlugin } from "../lib"

  Alpine.magic("matchSorter", () => {
    return (items: string[], value: string, options: any) => matchSorter(items, value, options)
  })
  Alpine.magic("comboboxData", () => comboboxData)
  Alpine.plugin(usePlugin("combobox", combobox))
</script>

<Layout>
  <div
    class="page"
    x-data={`{options: $comboboxData,${JSON.stringify(state).substring(1)}`}
    x-id="['combobox']"
    x-combobox:collection="{
      items: options,
      itemToValue: (item) => item.code,
      itemToString: (item) => item.label,
    }"
    x-combobox={`{
      id: $id('combobox'),
      collection,
      onOpenChange() { options = $comboboxData },
      onInputValueChange({ inputValue }) {
        const filtered = $matchSorter($comboboxData, inputValue, { keys: ['label'] })
        options = filtered.length > 0 ? filtered : $comboboxData
      },
      ${Object.keys(state)}
    }`}
  >
    <Nav />
    <main class="combobox">
      <div>
        <button x-on:click="$combobox.setValue(['TG'])">Set to Togo</button>
        <button data-testid="clear-value-button" x-on:click="$combobox.clearValue()">Clear Value</button>
        <br />
        <div x-combobox:root>
          <label x-combobox:label>Select country</label>
          <div x-combobox:control>
            <input data-testid="input" x-combobox:input />
            <button data-testid="trigger" x-combobox:trigger>▼</button>
            <button x-combobox:clear-trigger>
              <XIcon />
            </button>
          </div>
        </div>
        <div x-combobox:positioner>
          <template x-if="options.length > 0">
            <ul data-testid="combobox-content" x-combobox:content>
              <template x-for="item in options" x-bind:key="item.code">
                <li x-bind:data-testid="item.code" x-combobox:item="{ item }">
                  <span x-combobox:item-indicator="{ item }">✅</span>
                  <span x-text="item.label"></span>
                </li>
              </template>
            </ul>
          </template>
        </div>
      </div>
    </main>

    <Toolbar>
      <Controls config={comboboxControls} {state} slot="controls" />
      <StateVisualizer />
    </Toolbar>
  </div>
</Layout>
